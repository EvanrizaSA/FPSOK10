name: Build and Deploy to AWS EC2

on:
  push:
    branches:
      - main  # Pipeline berjalan setiap ada perubahan di branch `main`

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build --no-cache -t suit-otomatis .

      # Step 3: Save Docker Image to tarball
      - name: Save Docker Image
        run: |
          docker save -o suit-otomatis.tar suit-otomatis

      # Step 4: Upload Docker Image Artifact
      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: suit-otomatis-image
          path: suit-otomatis.tar

  analyze:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set Up Java 11
      - name: Set Up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      # Step 3: Verify Java Version
      - name: Verify Java Version
        run: |
          echo "JAVA_HOME=$JAVA_HOME"
          java -version

      # Step 4: Install SonarScanner and Use Correct Java
      - name: Run SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        run: |
          # Install SonarScanner
          curl -sL https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip -o sonar-scanner.zip
          unzip sonar-scanner.zip -d $HOME

          # Set SonarScanner and Java Environment
          export PATH="$HOME/sonar-scanner-4.8.0.2856-linux/bin:$PATH"
          export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
          export PATH=$JAVA_HOME/bin:$PATH

          # Verify Java Version Used by SonarScanner
          java -version
          sonar-scanner -v

          # Run Sonar Analysis
          sonar-scanner \
            -Dsonar.projectKey="fp-pso-k10" \
            -Dsonar.organization="FP_PSO_K10" \
            -Dsonar.sources="." \
            -Dsonar.host.url="https://sonarcloud.io" \
            -Dsonar.login="${SONAR_TOKEN}" \
            -X

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Menunggu proses build selesai

    steps:
      # Step 1: Download Docker Image Artifact
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: suit-otomatis-image

      # Step 2: Upload Artifact to EC2
      - name: SSH to EC2 and Prepare Deployment
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ec2-user  # Username Anda
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Buat direktori untuk upload file jika belum ada
            mkdir -p ~/docker-images/

            # Pastikan tidak ada tarball lama
            rm -f ~/docker-images/suit-otomatis.tar

      # Step 3: Upload Docker Tarball
      - name: Upload Docker Tarball
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: suit-otomatis.tar
          target: ~/docker-images/

      # Step 4: Load Docker Image and Deploy
      - name: SSH to EC2 and Deploy Container
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ec2-user  # Username Anda
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Load Docker Image
            docker load -i ~/docker-images/suit-otomatis.tar

            # Stop dan Remove container lama jika ada
            docker stop suit-otomatis-container || true
            docker rm suit-otomatis-container || true

            # Jalankan container baru
            docker run -d --name suit-otomatis-container -p 80:80 suit-otomatis

            # Bersihkan file tarball untuk menghemat ruang
            rm -f ~/docker-images/suit-otomatis.tar
